version: 2.1

executors:
  job-environment:
    shell: /bin/bash --login -eo pipefail
    macos:
      xcode: 11.2.0
    environment:
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8

commands:
  prepare:
    steps:
      - run: |
          echo "ruby-2.6.5" > ~/.ruby-version
          bundle install --without=development
          grep -lR "shouldUseLaunchSchemeArgsEnv" *.* --null | xargs -0 sed -i '' -e 's/shouldUseLaunchSchemeArgsEnv = "YES"/shouldUseLaunchSchemeArgsEnv = "YES" codeCoverageEnabled = "YES"/g'
  send-coverage-report:
    steps:
      - run: bash <(curl -s https://codecov.io/bash) -J 'SimpleKeychain'
  save-carthage-cache:
    steps:
      - save_cache:
          key: dependency-cache
          paths:
            - Carthage/Build
  build-package-ios:
      steps:
        - run: |
            bundle exec fastlane ios pod_lint
            carthage update --no-use-binaries && carthage build --no-skip-current
  test-ios:
      steps:
        - run: |
            bundle exec fastlane ios bootstrap
            bundle exec fastlane ios ci
        - save-carthage-cache
  test-macos:
    steps: 
      - run: |
          carthage bootstrap --platform mac
          security create-keychain -p circle cikeychain
          security list-keychains -d user -s "/Users/distiller/Library/Keychains/xcode.keychain-db" /Users/distiller/Library/Keychains/cikeychain-db
          security default-keychain -s /Users/distiller/Library/Keychains/cikeychain-db
          security unlock-keychain -p circle "/Users/distiller/Library/Keychains/cikeychain-db"
          xcodebuild test -scheme SimpleKeychain-OSX -destination 'platform=macOS,arch=x86_64' | xcpretty
          swift test
      - save-carthage-cache
  test-tvos:
    steps: 
      - run: |
          carthage bootstrap --platform tvOS
          xcodebuild test -scheme SimpleKeychain-tvOS -destination 'platform=tvOS Simulator,name=Apple TV' | xcpretty
      - save-carthage-cache

jobs:
  build-iOS:
    executor: job-environment
    environment:
      SCHEME: SimpleKeychain-iOS
      DEVICE: iPhone 8
      FASTLANE_EXPLICIT_OPEN_SIMULATOR: 2
    steps:
      - checkout
      - prepare
      - test-ios
      - build-package-ios
      - send-coverage-report
      - store_test_results:
          path: fastlane/test_output
  build-macOS:
    executor: job-environment
    steps:
      - checkout
      - prepare
      - test-macos
  build-tvOS:
    executor: job-environment
    steps:
      - checkout
      - prepare
      - test-tvos

workflows:
  build:
    jobs:
      - build-iOS
      - build-macOS
      - build-tvOS
